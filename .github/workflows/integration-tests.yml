name: Integration tests
on:
  issue_comment:
    types: [created, edited]

jobs:
  integration-tests:
    if: "github.event.comment.body == 'bot: integration'"
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
      fail-fast: false

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
#      - name: Checkout
#        uses: actions/checkout@v1
#
#      - name: Set Node.js 12.x
#        uses: actions/setup-node@master
#        with:
#          node-version: 12.x
#
#      - name: Get yarn cache
#        id: yarn-cache
#        run: echo "::set-output name=dir::$(yarn cache dir)"
#
#      - uses: actions/cache@v1
#        with:
#          path: ${{ steps.yarn-cache.outputs.dir }}
#          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-yarn-
#
#      - name: Bootstrap the project
#        run: npx lerna bootstrap
#
#      - name: Running integration tests for master branch
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.BOT_AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.BOT_AWS_SECRET_ACCESS_KEY }}
#          AWS_REGION: eu-west-1
#        run: npx lerna run integration --stream
